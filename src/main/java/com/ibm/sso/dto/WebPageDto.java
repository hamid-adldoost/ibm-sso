package com.ibm.sso.dto;

import com.aef3.data.api.DomainDto;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.ibm.sso.model.WebPage;
import java.util.Date;


/* Generated By AEF Generator ( Powered by Dr.Adldoost :D ) */

public class WebPageDto implements DomainDto<WebPage, WebPageDto> {


    private String address;
    private String name;
    private Long id;
    private String title;
    private String content;
 

    public String getAddress() {
        return address;
    }
    public void setAddress(String address) {
        this.address = address;
    }

    public String getName() {
        return name;
    }
    public void setName(String name) {
        this.name = name;
    }

    public Long getId() {
        return id;
    }
    public void setId(Long id) {
        this.id = id;
    }

    public String getTitle() {
        return title;
    }
    public void setTitle(String title) {
        this.title = title;
    }

    public String getContent() {
        return content;
    }
    public void setContent(String content) {
        this.content = content;
    }



    public static WebPageDto toDto(WebPage webPage) {

        if(webPage == null)
            return null; 
        WebPageDto dto = new WebPageDto();
        dto.setAddress(webPage.getAddress());
        dto.setName(webPage.getName());
        dto.setId(webPage.getId());
        dto.setTitle(webPage.getTitle());
        dto.setContent(webPage.getContent());
        return dto;
  }


    public static WebPage toEntity(WebPageDto dto) {

        if(dto == null)
            return null; 
        WebPage webPage = new WebPage();
        webPage.setAddress(dto.getAddress());
        webPage.setName(dto.getName());
        webPage.setId(dto.getId());
        webPage.setTitle(dto.getTitle());
        webPage.setContent(dto.getContent());
        return webPage;
  }
    @Override
    public WebPage toEntity() {
        return WebPageDto.toEntity(this);
    }

    @JsonIgnore
    @Override
    public WebPageDto getInstance(WebPage webPage) {
        return WebPageDto.toDto(webPage);
    }

    @JsonIgnore
    @Override
    public WebPageDto getInstance() {
        return new WebPageDto();
    }
}