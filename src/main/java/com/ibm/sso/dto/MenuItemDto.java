package com.ibm.sso.dto;

import com.aef3.data.api.DomainDto;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.ibm.sso.model.MenuItem;
import java.util.Date;


/* Generated By AEF Generator ( Powered by Dr.Adldoost :D ) */

public class MenuItemDto implements DomainDto<MenuItem, MenuItemDto> {


    private String address;
    private String name;
    private String permission;
    private Long id;
    private WebPageDto page;
    private String title;
    private MenuItemDto parentItem;
 

    public String getAddress() {
        return address;
    }
    public void setAddress(String address) {
        this.address = address;
    }

    public String getName() {
        return name;
    }
    public void setName(String name) {
        this.name = name;
    }

    public String getPermission() {
        return permission;
    }
    public void setPermission(String permission) {
        this.permission = permission;
    }

    public Long getId() {
        return id;
    }
    public void setId(Long id) {
        this.id = id;
    }

    public WebPageDto getPage() {
        return page;
    }
    public void setPage(WebPageDto page) {
        this.page = page;
    }

    public String getTitle() {
        return title;
    }
    public void setTitle(String title) {
        this.title = title;
    }

    public MenuItemDto getParentItem() {
        return parentItem;
    }

    public void setParentItem(MenuItemDto parentItem) {
        this.parentItem = parentItem;
    }

    public static MenuItemDto toDto(MenuItem menuItem) {

        if(menuItem == null)
            return null; 
        MenuItemDto dto = new MenuItemDto();
        dto.setAddress(menuItem.getAddress());
        dto.setName(menuItem.getName());
        dto.setPermission(menuItem.getPermission());
        dto.setId(menuItem.getId());
        dto.setPage(WebPageDto.toDto(menuItem.getPage()));
        dto.setTitle(menuItem.getTitle());
        if(menuItem.getParentItem() != null)
            dto.setParentItem(MenuItemDto.toDto(menuItem.getParentItem()));
        return dto;
  }


    public static MenuItem toEntity(MenuItemDto dto) {

        if(dto == null)
            return null; 
        MenuItem menuItem = new MenuItem();
        menuItem.setAddress(dto.getAddress());
        menuItem.setName(dto.getName());
        menuItem.setPermission(dto.getPermission());
        menuItem.setId(dto.getId());
        menuItem.setPage(WebPageDto.toEntity(dto.getPage()));
        menuItem.setTitle(dto.getTitle());
        if(dto.getParentItem() != null)
            menuItem.setParentItem(MenuItemDto.toEntity(dto.getParentItem()));
        return menuItem;
  }
    @Override
    public MenuItem toEntity() {
        return MenuItemDto.toEntity(this);
    }

    @JsonIgnore
    @Override
    public MenuItemDto getInstance(MenuItem menuItem) {
        return MenuItemDto.toDto(menuItem);
    }

    @JsonIgnore
    @Override
    public MenuItemDto getInstance() {
        return new MenuItemDto();
    }
}