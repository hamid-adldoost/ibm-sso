package com.ibm.sso.dao;

import com.aef3.data.impl.AbstractDAOImpl;
import com.ibm.sso.common.BusinessExceptionCode;
import com.ibm.sso.model.SecurityPermission;
import com.ibm.sso.model.SecurityRole;
import org.springframework.stereotype.Repository;

import java.util.List;


/* Generated By AEF Generator ( Powered by Dr.Adldoost :D ) */

@Repository
public class SecurityRoleDao extends AbstractDAOImpl<SecurityRole, Long> {

    public SecurityRoleDao() {
        super(SecurityRole.class);
    }

    public List<SecurityPermission> findUnAssinedPermissions(Long roleId) {
        SecurityRole securityRole = findByPrimaryKey(roleId);

        if(securityRole == null)
            throw new RuntimeException(BusinessExceptionCode.ROLE_NOT_FOUND.name());

        if(securityRole.getPermissionList() != null && !securityRole.getPermissionList().isEmpty())
            return getEntityManager().createQuery("select p from SecurityPermission p where " +
                    "p not in :permissionList", SecurityPermission.class)
                    .setParameter("permissionList", securityRole.getPermissionList())
                    .getResultList();
        else
            return getEntityManager().createQuery("select p from SecurityPermission p", SecurityPermission.class)
                    .getResultList();
    }
}