package com.ibm.sso.jwt;

import java.util.Collection;
import java.util.Date;
import java.util.List;
import java.util.Set;

/**
 *
 * @author Generated By AEF3 Framework, powered by Dr.Adldoost :D
 */
public class SecurityWrapper {
    
    private String username;
    private Set<String> permissions;
    private Set<String> roles;
    private String freshToken;
    private boolean isSecure;

    public SecurityWrapper() {

    }

    public SecurityWrapper(String username, Set<String> permissions, Set<String> roles, String freshToken, boolean isSecure){

        this.username = username;
        this.permissions = permissions;
        this.roles = roles;
        this.freshToken = freshToken;
        this.isSecure = isSecure;


        JWTUserDetails jwtUserDetails = new JWTUserDetails();
        jwtUserDetails.setUsername(username);
        jwtUserDetails.setRoles(roles);
        jwtUserDetails.setPermissions(permissions);
        jwtUserDetails.setCreationDate(new Date());
        this.freshToken = JWTUtil.generateToken(jwtUserDetails);
    }

    public String getUsername() {
        return username;
    }

    public void setUsername(String username) {
        this.username = username;
    }

    public Set<String> getPermissions() {
        return permissions;
    }

    public void setPermissions(Set<String> permissions) {
        this.permissions = permissions;
    }

    public Set<String> getRoles() {
        return roles;
    }

    public void setRoles(Set<String> roles) {
        this.roles = roles;
    }

    public String getFreshToken() {
        return freshToken;
    }

    public void setFreshToken(String freshToken) {
        this.freshToken = freshToken;
    }

    public boolean isSecure() {
        return isSecure;
    }

    public void setSecure(boolean secure) {
        isSecure = secure;
    }

    public boolean hasAnyRole(List<String> roles) {
        if(roles == null || roles.isEmpty())
            return true;
        if(this.getRoles() == null || this.getRoles().isEmpty())
            return false;
        for (String r : this.roles) {
            if (this.getRoles().contains(r))
                return true;
        }
        return false;
    }

}
